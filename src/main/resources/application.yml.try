server:
  port: 89

kc:
  base-url: http://192.168.99.100:8080/auth
  realm: RHM
  realm-url: ${kc.base-url}/realms/${kc.realm}

spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: springtest
            client-name: Spring test
            client-secret: 4a8657b2-acb1-49f0-b338-73528ebe2f82
            provider: keycloak
            authorization-grant-type: authorization_code
            scope: openid, profile
            redirect-uri-template: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          keycloak:
            authorization-uri: ${kc.realm-url}/protocol/openid-connect/auth
            jwk-set-uri: ${kc.realm-url}/protocol/openid-connect/certs
            token-uri: ${kc.realm-url}/protocol/openid-connect/token
            # would be cool if there was a end-session-uri to propagate logouts

            #  User info endpoint not needed since Keycloak uses self-contained value tokens
            #            user-info-uri: ${kc.realm-url}/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username